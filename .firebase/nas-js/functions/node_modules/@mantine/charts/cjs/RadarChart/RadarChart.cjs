'use client';
'use strict';

var jsxRuntime = require('react/jsx-runtime');
var recharts = require('recharts');
var core = require('@mantine/core');
var RadarChart_module = require('./RadarChart.module.css.cjs');

const defaultProps = {
  withPolarGrid: true,
  withPolarAngleAxis: true,
  withPolarRadiusAxis: false
};
const varsResolver = core.createVarsResolver((theme, { gridColor, textColor }) => ({
  root: {
    "--chart-grid-color": gridColor ? core.getThemeColor(gridColor, theme) : void 0,
    "--chart-text-color": textColor ? core.getThemeColor(textColor, theme) : void 0
  }
}));
const RadarChart = core.factory((_props, ref) => {
  const props = core.useProps("RadarChart", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    data,
    series,
    dataKey,
    gridColor,
    textColor,
    radarProps,
    radarChartProps,
    polarGridProps,
    polarAngleAxisProps,
    polarRadiusAxisProps,
    withPolarGrid,
    withPolarAngleAxis,
    withPolarRadiusAxis,
    children,
    ...others
  } = props;
  const theme = core.useMantineTheme();
  const getStyles = core.useStyles({
    name: "RadarChart",
    classes: RadarChart_module,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver
  });
  const radars = series.map((item, index) => /* @__PURE__ */ jsxRuntime.jsx(
    recharts.Radar,
    {
      name: item.name,
      dataKey: item.name,
      stroke: core.getThemeColor(item.strokeColor || item.color, theme),
      fill: core.getThemeColor(item.color, theme),
      fillOpacity: item.opacity || 0.4,
      isAnimationActive: false,
      ...typeof radarProps === "function" ? radarProps(item) : radarProps
    },
    index
  ));
  return /* @__PURE__ */ jsxRuntime.jsx(core.Box, { ref, ...getStyles("root"), ...others, children: /* @__PURE__ */ jsxRuntime.jsx(recharts.ResponsiveContainer, { ...getStyles("container"), children: /* @__PURE__ */ jsxRuntime.jsxs(recharts.RadarChart, { data, ...radarChartProps, children: [
    withPolarGrid && /* @__PURE__ */ jsxRuntime.jsx(recharts.PolarGrid, { stroke: "var(--chart-grid-color)", ...polarGridProps }),
    withPolarAngleAxis && /* @__PURE__ */ jsxRuntime.jsx(recharts.PolarAngleAxis, { dataKey, ...polarAngleAxisProps }),
    withPolarRadiusAxis && /* @__PURE__ */ jsxRuntime.jsx(recharts.PolarRadiusAxis, { stroke: "var(--chart-grid-color)", ...polarRadiusAxisProps }),
    radars,
    children
  ] }) }) });
});
RadarChart.displayName = "@mantine/charts/RadarChart";
RadarChart.classes = RadarChart_module;

exports.RadarChart = RadarChart;
//# sourceMappingURL=RadarChart.cjs.map
