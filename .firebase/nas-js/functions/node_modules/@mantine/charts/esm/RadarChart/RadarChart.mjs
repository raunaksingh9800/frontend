'use client';
import { jsx, jsxs } from 'react/jsx-runtime';
import { Radar, ResponsiveContainer, RadarChart as RadarChart$1, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';
import { createVarsResolver, getThemeColor, factory, useProps, useMantineTheme, useStyles, Box } from '@mantine/core';
import classes from './RadarChart.module.css.mjs';

const defaultProps = {
  withPolarGrid: true,
  withPolarAngleAxis: true,
  withPolarRadiusAxis: false
};
const varsResolver = createVarsResolver((theme, { gridColor, textColor }) => ({
  root: {
    "--chart-grid-color": gridColor ? getThemeColor(gridColor, theme) : void 0,
    "--chart-text-color": textColor ? getThemeColor(textColor, theme) : void 0
  }
}));
const RadarChart = factory((_props, ref) => {
  const props = useProps("RadarChart", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    data,
    series,
    dataKey,
    gridColor,
    textColor,
    radarProps,
    radarChartProps,
    polarGridProps,
    polarAngleAxisProps,
    polarRadiusAxisProps,
    withPolarGrid,
    withPolarAngleAxis,
    withPolarRadiusAxis,
    children,
    ...others
  } = props;
  const theme = useMantineTheme();
  const getStyles = useStyles({
    name: "RadarChart",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver
  });
  const radars = series.map((item, index) => /* @__PURE__ */ jsx(
    Radar,
    {
      name: item.name,
      dataKey: item.name,
      stroke: getThemeColor(item.strokeColor || item.color, theme),
      fill: getThemeColor(item.color, theme),
      fillOpacity: item.opacity || 0.4,
      isAnimationActive: false,
      ...typeof radarProps === "function" ? radarProps(item) : radarProps
    },
    index
  ));
  return /* @__PURE__ */ jsx(Box, { ref, ...getStyles("root"), ...others, children: /* @__PURE__ */ jsx(ResponsiveContainer, { ...getStyles("container"), children: /* @__PURE__ */ jsxs(RadarChart$1, { data, ...radarChartProps, children: [
    withPolarGrid && /* @__PURE__ */ jsx(PolarGrid, { stroke: "var(--chart-grid-color)", ...polarGridProps }),
    withPolarAngleAxis && /* @__PURE__ */ jsx(PolarAngleAxis, { dataKey, ...polarAngleAxisProps }),
    withPolarRadiusAxis && /* @__PURE__ */ jsx(PolarRadiusAxis, { stroke: "var(--chart-grid-color)", ...polarRadiusAxisProps }),
    radars,
    children
  ] }) }) });
});
RadarChart.displayName = "@mantine/charts/RadarChart";
RadarChart.classes = classes;

export { RadarChart };
//# sourceMappingURL=RadarChart.mjs.map
